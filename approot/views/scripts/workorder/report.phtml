<?php
/**
    @file
    @brief WorkOrder Index View - Shows Paginated Results of the Index View
*/
     
?>
<style>
.chart rect {
  fill: steelblue;
  stroke: #000;
}
.chart rect.hours {
  fill: #f00;
  stroke: #000;
}
.chart rect.money {
  fill: #0c0;
  stroke: #000;
}

</style>
<h2>Daily Hours / Revenue</h2>
<div id="chart-d" style="height:240px;margin: 0 auto 16px auto; width:960px;"></div>
<h2>Weekly Hours / Revenue</h2>
<div id="chart-w" style="height:240px;margin: 0 auto 16px auto; width:960px;"></div>
<h2>Monthly Hours / Revenue</h2>
<div id="chart-m" style="height:240px;margin: 0 auto; width:960px;"></div>

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>
var dataD = <?php echo json_encode(array_reverse($this->DataByDay)); ?>;
var dataW = <?php echo json_encode(array_reverse($this->DataByWeek)); ?>;
var dataM = <?php echo json_encode(array_reverse($this->DataByMonth)); ?>;

function find_max(d)
{
    var i = 0;
    var c = d.length;
    var r = 0;
    for (i=0;i<c;i++) {
        if (d[i].sum) r = Math.max(r,d[i].sum);
        if (d[i].value) r = Math.max(r,d[i].value);
    }
    return r;
}

var max_y = find_max(dataM);
var svg_w = 960;
var svg_h = 240;
var bar_w = 16;

var margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = svg_h - margin.top - margin.bottom;

var parseDate = d3.time.format("%d-%b-%y").parse;

// xScale
var scale_x = d3.scale.linear()
    .domain([0, 1])
    .range([0, bar_w]);

var scale_y = d3.scale.linear()
    .domain([0, max_y])
    .rangeRound([0, svg_h]);

var xAxis = d3.svg.axis()
    .scale(scale_x)
    .orient("bottom");
// 
// var yAxis = d3.svg.axis()
//     .scale(scale_y)
//     .orient("left");
// 
// var line = d3.svg.line()
//     .x(function(d) { return x(d.date); })
//     .y(function(d) { return y(d.close); });
// 
var svg = d3.select('#chart-m')
    .append('svg')
        .attr('class','chart')
        .attr('width', dataM.length * (bar_w + 16))
        .attr('height', svg_h);
//    .append("g")
//        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
     
svg.selectAll('rect')
    .data(dataM)
    .enter().append('rect')
        .attr('x',function(d,i) {
            // return (i * bar_w) + (i*8);
            return scale_x(i) - .5;
        })
        .attr('y',function(d) {
            // return height - y(parseInt(d.sum)) - .5;
            return svg_h - scale_y(parseInt(d.sum)) - .5;
        })
        .attr('width',bar_w)
        .attr('height',function(d,i) {
            return scale_y(parseInt(d.sum));
        })
        .append('title').text(function(d,i) {
            return 'Date: ' + d.date + '; Sum: ' + d.sum;
        });
        // .text(d.sum);

svg.append('g')
    .attr("transform", "translate(0," + svg_h + ")")
    .call(xAxis);

function draw_chart_d()
{
    max_y = find_max(dataD);
    // xScale
    scale_x = d3.scale.linear()
        .domain([0, 1])
        .range([0, bar_w]);
    // yScale
    scale_y = d3.scale.linear()
        .domain([0, max_y])
        .rangeRound([0, svg_h]);

    var svg = d3.select('#chart-d')
        .append('svg')
            .attr('class','chart')
            .attr('width', dataD.length * (bar_w + 16))
            .attr('height', svg_h);

    svg.selectAll('rect')
        .data(dataD)
        .enter().append('rect')
            .attr('x',function(d,i) {
                // return (i * bar_w) + (i*8);
                return scale_x(i) - .5;
            })
            .attr('y',function(d) {
                // return height - y(parseInt(d.sum)) - .5;
                return svg_h - scale_y(parseInt(d.sum)) - .5;
            })
            .attr('width',bar_w)
            .attr('height',function(d,i) {
                return scale_y(parseInt(d.sum));
            })
            .append('title').text(function(d,i) {
                return 'Date: ' + d.date + '; Sum: ' + d.sum;
            });
            // .text(d.sum);

    svg.selectAll('line')
        .data(scale_x.ticks(10))
        .enter().append('line')
            .attr('x',scale_x)
            .attr('y',0)
            .attr('dy',-3)
            .text('Text');
            
}
draw_chart_d();

function draw_chart_w()
{
    max_y = find_max(dataW);

    // xScale
    scale_x = d3.scale.linear()
        .domain([0, 1])
        .range([0, bar_w]);
    // yScale
    scale_y = d3.scale.linear()
        .domain([0, max_y])
        .rangeRound([0, svg_h]);

    var svg = d3.select('#chart-w')
        .append('svg')
            .attr('class','chart')
            .attr('width', dataW.length * (bar_w + 16))
            .attr('height', svg_h);

    svg.selectAll('rect')
        .data(dataW)
        .enter().append('rect')
            .attr('x',function(d,i) {
                return scale_x(i) - .5;
            })
            .attr('y',function(d) {
                return svg_h - scale_y(parseInt(d.value)) - .5;
            })
            .attr('width',bar_w)
            .attr('height',function(d,i) {
                return scale_y(parseInt(d.value));
            })
            .append('title').text(function(d,i) {
                return 'Date: ' + d.date + '; Sum: ' + d.sum;
            });

}
draw_chart_w();
</script>
<?php

// Zend_Debug::dump($this->DataByDay);
// Zend_Debug::dump($this->DataByWeek);
// Zend_Debug::dump($this->DataByMonth);
